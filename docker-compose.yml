version: '3.9'
services:
  app:
    build: .
    container_name: jwt-app
    ports:
      - 8080:8080
    depends_on:
      - mongodb
      - mongocli
    volumes:
      - app_data:/usr/src/app
      
  mongodb:
    image: mongo:7.0.5
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
      - MONGO_INITDB_DATABASE=${MONGO_DBNAME}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      retries: 3

  mongocli:
    image: mongo-express
    container_name: mongocli
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=default
      - ME_CONFIG_MONGODB_SERVER=mongo_db
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=mydb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpassword
    ports:
      - "8081:8081"
    restart: on-failure
    depends_on:
      - mongodb
      
volumes:
  app_data:
  mongodb_data:
  mongodb_config:
